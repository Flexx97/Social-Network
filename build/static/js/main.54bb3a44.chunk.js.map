{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/users.module.css","components/BestFriends/BestFriends.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/Myposts/myPosts.module.css","components/Navbar/nav-bar.module.css","components/img/user.png","components/img/audio.svg","components/Profile/UserInfo/userinfo.module.css","components/Header/header.module.css","redux/profile-reducer.js","redux/Dialogs-reducer.js","redux/BestFriends-reducer.js","redux/users-reducer.js","redux/Auth-reducer.js","redux/redux-store.js","components/BestFriends/BestFriends.jsx","components/BestFriends/BestFriendsContainer.jsx","components/Navbar/nav-bar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.js","components/common/loader/loader.js","components/Users/UsersContainer.js","components/Profile/UserInfo/userinfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/myPosts.jsx","components/Profile/Myposts/myPostsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.jsx","App.js","index.js"],"names":["module","exports","initialState","PostData","like","message","NewPostText","profile","profileReduce","state","action","type","newPost","Data","id","name","MesData","updateMessage","messagePageReduce","newMessage","NavBestFriends","img","bestFriendsReduce","users","pageNumber","PageSize","totalCount","loaded","page","UsersReduce","map","u","userID","followed","num","updateNumber","undefined","newPage","val","userId","login","isAuth","authReducer","reduceComb","combineReducers","profilePage","messagePage","BestFriends","UsersPage","auth","store","createStore","props","Friends","FriendsWay","className","best","src","decor","frpos","BestFriendsContainer","connect","dispatch","changeFriends","Nav","nav","to","item","activeClassName","active","important","News","Music","Settings","DialogsItem","dialogs","dialog","Message","Dialogs","mes","React","createRef","newData","newMessageWay","messages","chats","onChange","current","value","changeMessageWay","ref","send","onClick","addMessageWay","btn","DialogsContainer","Users","totalPage","Math","ceil","splice","number","ChangePage","prevPage","style","numberActive","nextPage","userState","uBlock","key","photos","small","userPhoto","avatar","blockName","status","unfollow","follow","Loader","loadImg","UsersContainerAPI","usersLoad","toggleLoad","updateChangePage","updateNumberPage","axios","then","response","getSetUsers","data","items","this","setCountTotal","unFollow","UpdateNumber","Component","UsersContainer","pageUpdate","UserInfo","userProfile","height","width","fullName","Post","p","block","likely","MyPosts","newPostDate","newPostWay","Text","my","myp","textarea","add","ChangeAction","PostText","onAddPost","post","MyPostsContainer","ChangeActionCreator","Profile","ProfileContainer","match","params","profileUpdate","withRouter","Header","header","HeaderContainer","withCredentials","credentials","referrerPolicy","origin","setUserState","App","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.54bb3a44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Dialogs_message__3AC4Y\",\"active\":\"Dialogs_active__2E0jx\",\"dialogs\":\"Dialogs_dialogs__352bg\",\"dialog\":\"Dialogs_dialog__23Eoq\",\"chats\":\"Dialogs_chats__32Bm0\",\"send\":\"Dialogs_send__2F9xy\",\"btn\":\"Dialogs_btn__1YHVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uBlock\":\"users_uBlock__32N58\",\"avatar\":\"users_avatar__3c1ry\",\"blockName\":\"users_blockName__85_SX\",\"btn\":\"users_btn__28Nfk\",\"number\":\"users_number__151KN\",\"numberActive\":\"users_numberActive__nPGYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"best\":\"BestFriends_best__1S-FN\",\"decor\":\"BestFriends_decor__1DJmK\",\"frpos\":\"BestFriends_frpos__3xBWG\",\"img\":\"BestFriends_img__1nllb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2OxKC\",\"block\":\"Post_block__aBsxY\",\"likely\":\"Post_likely__2z6NV\",\"img\":\"Post_img__2Uoru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myp\":\"myPosts_myp__3efv-\",\"textarea\":\"myPosts_textarea__227XI\",\"btn\":\"myPosts_btn__3Kk4N\",\"post\":\"myPosts_post__14ouh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav-bar_nav__3sa2Y\",\"item\":\"nav-bar_item__1qPG_\",\"active\":\"nav-bar_active__2WyWO\",\"best\":\"nav-bar_best__2K3__\"};","module.exports = __webpack_public_path__ + \"static/media/user.65d84bf5.png\";","module.exports = __webpack_public_path__ + \"static/media/audio.8f8f3d19.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"userinfo_avatar__2WOm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2nDLm\"};","const ADD_POST = 'ADD_POST',\r\nUPDATE_TEXT_POST = 'UPDATE_TEXT_POST',\r\nnewProfile = 'NEW_PROFILE'\r\n\r\nexport let addPostActionCreator = () => ({\r\n    type: ADD_POST\r\n})\r\n\r\nexport let ChangeActionCreator = (add) => ({\r\n    type: UPDATE_TEXT_POST,\r\n    NewPostText: add\r\n})\r\nexport let profileUpdate = (profile) => ({\r\n    type: newProfile,\r\n    profile\r\n})\r\n\r\n\r\nlet initialState = {\r\n    PostData: [\r\n        {like: 20, message: 'Hi, how are you?'},\r\n        {like: 15486, message: 'It\\'s my first post'}\r\n    ],\r\n    NewPostText: 'Сегодня хочу вам рассказать...',\r\n    profile: null\r\n}\r\n\r\n\r\nlet profileReduce = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_TEXT_POST: return {\r\n            ...state,\r\n            NewPostText: action.NewPostText\r\n        }\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                like: 0,\r\n                message: state.NewPostText\r\n            }\r\n            return {\r\n                ...state,\r\n                PostData: [...state.PostData, newPost],\r\n                NewPostText: ''\r\n            }\r\n        }\r\n        case newProfile: return {\r\n            ...state,\r\n            profile: action.profile\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default profileReduce","const UPDATE_MESSAGE_TEXT = 'UPDATE_MESSAGE_TEXT'\r\nconst ADD_TEXT = 'ADD_TEXT'\r\n\r\nexport let updateMessageText = (newMes) => ({\r\n    type: UPDATE_MESSAGE_TEXT,\r\n    newMessage: newMes\r\n})\r\n\r\nexport let addText = () => ({\r\n    type: ADD_TEXT\r\n})\r\n\r\nlet initialState = {\r\n    Data: [\r\n        {id: 1, name: 'Katya'},\r\n        {id: 2, name: 'Fedor'},\r\n        {id: 3, name: 'Alexey'}\r\n    ],\r\n    MesData: [\r\n        {message: 'what are you doing'},\r\n        {message: 'You suck'}\r\n    ],\r\n    updateMessage: '',\r\n}\r\n\r\n\r\nlet messagePageReduce = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                updateMessage: action.newMessage\r\n            }\r\n        case ADD_TEXT:\r\n            return {\r\n                ...state,\r\n                MesData: [...state.MesData, {message: state.updateMessage}],\r\n                updateMessage: ''\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default messagePageReduce","\r\nlet initialState = {\r\n        NavBestFriends: [\r\n            {name: 'Katya', img: 'https://www.meme-arsenal.com/memes/ae1d44253a861f53d95864dd37c55a78.jpg'},\r\n            {name: 'Stepa', img: 'https://i.pinimg.com/736x/4a/bc/c0/4abcc00427dbb86ee5da8270b52204f8.jpg'},\r\n            {name: 'Vitya', img: 'https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg'}\r\n        ],\r\n}\r\n\r\n\r\nlet bestFriendsReduce = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default bestFriendsReduce","const FOLLOW = 'FOLLOW',\r\nUNFOLLOW = 'UNFOLLOW',\r\nsetUsers = 'SETUSERS',\r\nChangePage = 'CHANGEPAGE',\r\nsetTotalCount = 'SET_TOTAL_COUNT',\r\nupdatePage = 'UPDATEPAGE',\r\nupdatePageNumber = 'UPDATEPAGENUMBER',\r\nsetLoading = 'TOGGLE_LOADING',\r\nloadUsers = 'LOAD_USERS'\r\n\r\nexport let follow = (userID) => ({\r\n    type: FOLLOW,\r\n    userID: userID\r\n})\r\nexport let unFollow = (userID) => ({\r\n    type: UNFOLLOW,\r\n    userID: userID\r\n})\r\nexport let getSetUsers = (users) => ({\r\n    type: setUsers,\r\n    users: users\r\n})\r\nexport let updateChangePage = (num) => ({\r\n    type: ChangePage,\r\n    num: num\r\n})\r\nexport let setCountTotal = (totalCount) => ({\r\n    type: setTotalCount,\r\n    totalCount\r\n})\r\nexport let pageUpdate = (updateNumber) => ({\r\n    type: updatePage,\r\n    updateNumber: updateNumber,\r\n})\r\nexport let updateNumberPage = (newPage) => ({\r\n    type: updatePageNumber,\r\n    newPage\r\n})\r\nexport let toggleLoad = (val) => ({\r\n    type: setLoading,\r\n    val\r\n})\r\nexport let usersLoad = () => ({\r\n    type: loadUsers\r\n})\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageNumber: 1,\r\n    PageSize: 5,\r\n    totalCount: 50,\r\n    loaded: true,\r\n    page: [1, 2, 3, 4]\r\n}\r\n\r\n\r\nlet UsersReduce = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case setUsers:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case ChangePage:\r\n            return {\r\n                ...state,\r\n                pageNumber: action.num\r\n            }\r\n        case setTotalCount:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        case updatePage:\r\n            return {\r\n                ...state,\r\n                pageNumber: action.updateNumber\r\n            }\r\n        case updatePageNumber:\r\n            return {\r\n                ...state,\r\n                page: action.newPage === undefined ? state.page : action.newPage\r\n            }\r\n        case setLoading:\r\n            return {\r\n                ...state,\r\n                loaded: action.val\r\n            }\r\n        case loadUsers:\r\n            return {\r\n                ...state,\r\n                users: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default UsersReduce","const logUser = 'SET_USER'\r\n\r\nexport let setUserState = (userId, login) => ({\r\n    type: logUser,\r\n    userId,\r\n    login,\r\n})\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case logUser:\r\n            return {\r\n                ...state,\r\n                userId: action.userId,\r\n                login: action.login,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","import {combineReducers, createStore} from \"redux\";\r\nimport profileReduce from \"./profile-reducer\";\r\nimport messagePageReduce from \"./Dialogs-reducer\";\r\nimport bestFriendsReduce from \"./BestFriends-reducer\";\r\nimport UsersReduce from \"./users-reducer\";\r\nimport authReducer from \"./Auth-reducer\";\r\n\r\nlet reduceComb = combineReducers({\r\n    profilePage: profileReduce,\r\n    messagePage: messagePageReduce,\r\n    BestFriends: bestFriendsReduce,\r\n    UsersPage: UsersReduce,\r\n    auth: authReducer\r\n})\r\n\r\nlet store = createStore(reduceComb);\r\n\r\n\r\nexport default store","import React from 'react';\r\nimport best from './BestFriends.module.css';\r\n\r\nconst BestFriends = (props) => {\r\n    let Friends =\r\n        props.FriendsWay.map(state =>\r\n            <div>\r\n                <img className={best.img} src={state.img}/>\r\n                <div>{state.name}</div>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <div className={best.best}>\r\n            <div className={best.decor}>Best Friends</div>\r\n            <div className={best.frpos}>\r\n                {Friends}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BestFriends;","import React from 'react';\r\nimport bestFriendsReduce from \"../../redux/BestFriends-reducer\";\r\nimport BestFriends from \"./BestFriends\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        FriendsWay: state.BestFriends.NavBestFriends\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeFriends: (Friends) => {\r\n            dispatch(bestFriendsReduce(Friends))\r\n        }\r\n    }\r\n}\r\n\r\nconst BestFriendsContainer = connect(mapStateToProps, mapDispatchToProps) (BestFriends);\r\nexport default BestFriendsContainer;","import React from 'react';\r\nimport nav from './nav-bar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport BestFriendsContainer from \"../BestFriends/BestFriendsContainer\";\r\n\r\nconst Nav = (props) => {\r\n    return (<nav className={nav.nav}>\r\n        <NavLink to='/profile' className={nav.item} activeClassName={nav.active}>Profile</NavLink>\r\n        <NavLink to='/dialogs' className={nav.item} activeClassName={nav.active}>Messages</NavLink>\r\n        <NavLink to='/users' className={nav.item} activeClassName={nav.active}>Users</NavLink>\r\n        <NavLink to='/news' className={nav.item} activeClassName={nav.active}>News</NavLink>\r\n        <NavLink to='/music' className={nav.item} activeClassName={nav.active}>Music</NavLink>\r\n        <NavLink to='settings' className={`${nav.item} ${nav.important}`}\r\n                 activeClassName={nav.active}>Settings</NavLink>\r\n        <div className={`${nav.best} ${nav.item}`}><BestFriendsContainer/></div>\r\n    </nav>);\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport dialogs from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n    <div>\r\n    <p>News</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport dialogs from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n    <div>\r\n    <p>Music</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport dialogs from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n    <div>\r\n    <p>Settings</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport dialogs from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    return (\r\n        <div className={`${dialogs.dialog} ${dialogs.active}`}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport dialogs from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={dialogs.message}>\r\n                {props.message}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport dialogs from './Dialogs.module.css';\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let mes = React.createRef();\r\n\r\n\r\n    let changeMessage = () => {\r\n        let message = mes.current.value\r\n        props.changeMessageWay(message)\r\n    }\r\n\r\n\r\n    let newData =\r\n        props.Data.map(dialog =>\r\n            (<DialogsItem name={dialog.name} id={dialog.id}/>)\r\n        );\r\n\r\n    let newMessage =\r\n        props.newMessageWay.map(messages =>\r\n            (<Message message={messages.message} id={messages.id}/>)\r\n        );\r\n\r\n    return (\r\n        <div className={dialogs.message}>\r\n            <div className={dialogs.dialogs}>\r\n                {newData}\r\n            </div>\r\n            <div className={dialogs.chats}>\r\n                {newMessage}\r\n                <div>\r\n                    <textarea onChange={ changeMessage } ref={mes} className={dialogs.send} value={props.updateMessage}/>\r\n                    <button onClick={props.addMessageWay} className={dialogs.btn}>send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addText, updateMessageText} from \"../../redux/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageWay: state.messagePage.MesData,\r\n        updateMessage: state.messagePage.updateMessage,\r\n        Data: state.messagePage.Data\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageWay: () => {\r\n            dispatch(addText())\r\n        },\r\n        changeMessageWay: (message) => {\r\n            dispatch(updateMessageText(message))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport style from './users.module.css';\r\nimport userPhoto from '../img/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    let totalPage = Math.ceil(props.totalCount / props.PageSize)\r\n\r\n    let nextPage = () => {\r\n        let number = props.pageNumber + 1\r\n        let newPage = props.page.map((u) => u + 1)\r\n        props.ChangePage(number, newPage)\r\n    }\r\n\r\n\r\n    let prevPage = () => {\r\n        let number = props.pageNumber - 1\r\n        let newPage = props.page.map((u) => u - 1)\r\n        props.ChangePage(number, newPage)\r\n    }\r\n\r\n    props.page.splice(3, 1, totalPage)\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            <span onClick={() => prevPage()}>Next</span>\r\n            <span>\r\n                {props.page.map((u) => {\r\n                        return (<span className={`${u === props.pageNumber && style.numberActive} ${style.number}`}\r\n                                      onClick={() => {\r\n                                          props.ChangePage(u)\r\n                                      }}>{u}</span>)\r\n                    }\r\n                )}\r\n            </span>\r\n            <span onClick={() => nextPage()}>Next</span>\r\n        </div>\r\n        {\r\n            props.userState.map(u =>\r\n                <div className={style.uBlock} key={u.id}>\r\n                    <NavLink to={`profile/${u.id}`}>\r\n                    <img src={u.photos.small == null\r\n                        ? userPhoto : u.photos.small}\r\n                         className={style.avatar}/>\r\n                    </NavLink>\r\n                    <div className={style.blockName}>\r\n                        <h5>{u.name}</h5>\r\n                        <p>{u.status}</p>\r\n                    </div>\r\n                    {u.followed\r\n                        ? <button onClick={() => {\r\n                            props.unfollow(u.id)\r\n                        }} className={style.btn}>Unfollow</button>\r\n                        : <button onClick={() => {\r\n                            props.follow(u.id)\r\n                        }} className={style.btn}>Follow</button>\r\n                    }\r\n                </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react'\r\nimport loadImg from '../../img/audio.svg'\r\n\r\nconst Loader = (props) => {\r\n    return <>\r\n        <img src={loadImg} />\r\n    </>\r\n}\r\n\r\nexport default Loader","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    getSetUsers,\r\n    pageUpdate,\r\n    setCountTotal, toggleLoad,\r\n    unFollow,\r\n    updateChangePage,\r\n    updateNumberPage, usersLoad\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport * as axios from \"axios\";\r\nimport Loader from \"../common/loader/loader\";\r\n\r\nclass UsersContainerAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.usersLoad()\r\n        this.props.toggleLoad(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.pageNumber}&count=${this.props.PageSize}`).then(response => {\r\n            this.props.toggleLoad(false)\r\n            this.props.getSetUsers(response.data.items)\r\n            this.props.setCountTotal(response.data.totalCount)\r\n        })\r\n    }\r\n\r\n    ChangePage = (u, newPage) => {\r\n        this.props.usersLoad()\r\n        this.props.toggleLoad(true)\r\n        this.props.updateChangePage(u)\r\n        this.props.updateNumberPage(newPage)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${u}&count=${this.props.PageSize}`).then(response => {\r\n            this.props.toggleLoad(false)\r\n            this.props.getSetUsers(response.data.items)\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return  <div>\r\n            {this.props.loaded === true ? <Loader/> : null}\r\n        <Users page={this.props.page}\r\n                   pageNumber={this.props.pageNumber}\r\n                   userState={this.props.userState}\r\n                   totalCount={this.props.totalCount}\r\n                   PageSize={this.props.PageSize}\r\n                   ChangePage={this.ChangePage}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unFollow}\r\n                   UpdateNumber={this.props.UpdateNumber}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userState: state.UsersPage.users,\r\n    pageNumber: state.UsersPage.pageNumber,\r\n    PageSize: state.UsersPage.PageSize,\r\n    totalCount: state.UsersPage.totalCount,\r\n    page: state.UsersPage.page,\r\n    loaded: state.UsersPage.loaded\r\n})\r\n\r\nlet UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    getSetUsers,\r\n    updateChangePage,\r\n    setCountTotal,\r\n    pageUpdate,\r\n    updateNumberPage,\r\n    toggleLoad,\r\n    usersLoad\r\n})(UsersContainerAPI);\r\n\r\n\r\nexport default UsersContainer","import React from 'react';\r\nimport profile from './userinfo.module.css';\r\nimport Loader from \"../../common/loader/loader\";\r\n\r\n\r\nconst UserInfo = (props) => {\r\n    if(!props.userProfile) {\r\n        return <Loader/>\r\n    }\r\n    return <>\r\n        <div>\r\n            <div className={profile.avatar}>\r\n                <img src={props.userProfile.photos.small} height='100px' width='100px'/>\r\n                <div>{props.userProfile.fullName}</div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default UserInfo;","import React from 'react';\r\nimport p from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return  <div className={p.block}>\r\n        <div className={p.item}>{props.message}</div>\r\n        <span className={p.likely}>\r\n            <img src=\"https://1.bp.blogspot.com/-d3LozscUMBY/Vtz13aLffMI/AAAAAAAALp0/Y9pFym980s0/s1600/love.png\" className={p.img}/>\r\n                {props.like}</span>\r\n        </div>\r\n\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport my from './myPosts.module.css';\r\n\r\nconst MyPosts = (props) => {\r\n    let newPostDate =\r\n        props.newPostWay.map(PostData =>\r\n            (<Post message={PostData.message} like={PostData.like}/>)\r\n        );\r\n\r\n    let Text = React.createRef();\r\n\r\n    let ChangeAction = () => {\r\n        let add = Text.current.value\r\n        props.ChangeAction(add)\r\n    };\r\n\r\n    return <div>\r\n        <div className={my.myp}>\r\n            <div>New posts</div>\r\n            <textarea ref={Text} className={my.textarea} onChange={ChangeAction} value={props.PostText}/>\r\n            <button className={my.btn} onClick={ props.onAddPost }>send</button>\r\n        </div>\r\n        <div className={my.post}>My post</div>\r\n        {newPostDate}\r\n    </div>\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, ChangeActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./myPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostWay: state.profilePage.PostData,\r\n        PostText: state.profilePage.NewPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        ChangeAction: (add) => {\r\n            dispatch(ChangeActionCreator(add))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport profile from './profile.module.css';\r\nimport UserInfo from \"./UserInfo/userinfo\";\r\nimport MyPostsContainer from \"./Myposts/myPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n            <UserInfo userProfile={props.userProfile} />\r\n            <MyPostsContainer\r\n                store={props.store}\r\n            />\r\n        </div>\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {profileUpdate} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass  ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n       let userID = this.props.match.params.userId\r\n        !userID ? userID = 2 : userID = this.props.match.params.userId\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userID).then(response => {\r\n            this.props.profileUpdate(response.data)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.profile\r\n})\r\n\r\nexport default connect (mapStateToProps, {profileUpdate}) (withRouter(ProfileContainer));","import React from 'react';\r\nimport header from './header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return ( <>\r\n        <header className={header.header}>{props.login}</header>\r\n\r\n    </>)\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserState} from \"../../redux/Auth-reducer\";\r\nimport * as axios from \"axios\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/auth/me`, {\r\n            withCredentials: true,\r\n            credentials: 'include',\r\n            referrerPolicy: origin\r\n        }).then(response => {\r\n            this.props.setUserState(response.data.data.userId,response.data.data.login)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n}\r\n\r\nexport default connect (mapStateToProps, {setUserState}) (HeaderContainer);","import React from 'react';\r\nimport './App.css';\r\nimport Nav from \"./components/Navbar/nav-bar\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/profileContainer\";\r\nimport HeaderContainer from \"./components/Header/headerContainer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path='/dialogs' render={() =>\r\n                        <DialogsContainer/>\r\n                    }/>\r\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path='/news' render={() => <News/>}/>\r\n                    <Route path='/music' render={() => <Music/>}/>\r\n                    <Route path='/settings' render={() => <Settings/>}/>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport store from './redux/redux-store';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n</BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}