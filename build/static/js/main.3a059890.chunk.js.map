{"version":3,"sources":["components/Navbar/nav-bar.module.css","components/img/user.png","components/img/audio.svg","components/Header/header.module.css","components/Dialogs/Dialogs.module.css","components/utils/validators.js","components/API/api.js","redux/profile-reducer.js","redux/Dialogs-reducer.js","redux/BestFriends-reducer.js","redux/users-reducer.js","redux/Auth-reducer.js","redux/redux-store.js","components/BestFriends/BestFriends.jsx","components/BestFriends/BestFriendsContainer.jsx","components/Navbar/nav-bar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/common/textarea.js","components/Dialogs/Dialogs.jsx","components/HOC-isAuth/hocRedirectLogin.js","components/Dialogs/DialogsContainer.jsx","components/Users/Users.js","components/common/loader/loader.js","redux/reselect.js","components/Users/UsersContainer.js","components/Profile/UserInfo/pofileStatus/profileStatus.js","components/Profile/UserInfo/userinfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/myPosts.jsx","components/Profile/Myposts/myPostsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.jsx","components/Login/login.jsx","App.js","index.js","components/Users/users.module.css","components/BestFriends/BestFriends.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/Myposts/myPosts.module.css","components/Profile/UserInfo/userinfo.module.css"],"names":["module","exports","length","instance","axios","baseURL","withCredentials","headers","usersAPI","pageNumber","PageSize","get","then","response","data","followUnfollow","id","post","delete","userAuth","email","password","rememberMe","profile","userID","status","put","gettingStatus","type","initialState","PostData","like","message","profileReduce","state","action","newPost","value","posText","filter","p","num","Data","name","MesData","messagePageReduce","messageText","NavBestFriends","img","bestFriendsReduce","getSetUsers","users","toggleLoad","val","toggleFollowProgress","stateFollow","userId","totalCount","loaded","page","isFollowedProgress","UsersReduce","map","u","followed","updateNumber","undefined","newPage","setUserState","login","isAuth","getAuthMe","dispatch","resultCode","authReducer","reduceComb","combineReducers","profilePage","messagePage","BestFriends","UsersPage","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","props","Friends","FriendsWay","className","best","src","decor","frpos","BestFriendsContainer","connect","changeFriends","Nav","nav","to","item","activeClassName","active","important","News","Music","Settings","DialogsItem","dialogs","dialog","Message","FormControl","input","meta","child","children","touched","error","warning","Textarea","restProps","required","maxLength15","DialogsReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","send","validate","btn","Dialogs","newData","newMessage","newMessageWay","messages","chats","addText","withRedirectLogin","Component","redeirectLogin","this","React","compose","Users","totalPage","Math","ceil","splice","onClick","number","updatePage","prevPage","style","numberActive","nextPage","userState","uBlock","key","photos","small","userPhoto","avatar","blockName","disabled","followProgress","some","followUserAction","unFollowUserAction","Loader","loadImg","getUsersState","getPageNumber","getPageSize","getTotalCount","getPage","getLoaded","getFollowProgress","UsersContainerAPI","ChangePageUpdate","getUser","UpdateNumber","UsersContainer","UsersAPI","items","updateNumberPage","uId","ProfileStatus","editMode","activeEditMode","setState","unActiveEditMode","updateStatus","onChangeStatus","e","currentTarget","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","UserInfo","userProfile","height","width","fullName","Post","block","likely","PostReduxForm","my","textarea","MyPosts","newPostDate","newPostWay","myp","addPostActionCreator","MyPostsContainer","Profile","ProfileContainer","match","params","authorizedUserId","getProfile","statusGet","profileUpdate","withRouter","Header","header","getLogOut","HeaderContainer","LoginReduxForm","placeholder","getLogIn","stopSubmit","_error","App","path","render","DialogsContainer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3a059890.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav-bar_nav__3sa2Y\",\"item\":\"nav-bar_item__1qPG_\",\"active\":\"nav-bar_active__2WyWO\",\"best\":\"nav-bar_best__2K3__\"};","module.exports = __webpack_public_path__ + \"static/media/user.65d84bf5.png\";","module.exports = __webpack_public_path__ + \"static/media/audio.8f8f3d19.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2nDLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Dialogs_message__3AC4Y\",\"active\":\"Dialogs_active__2E0jx\",\"dialogs\":\"Dialogs_dialogs__352bg\",\"dialog\":\"Dialogs_dialog__23Eoq\",\"chats\":\"Dialogs_chats__32Bm0\",\"send\":\"Dialogs_send__2F9xy\",\"btn\":\"Dialogs_btn__1YHVM\"};","export const required = value => {\r\n    return value ? undefined : 'Required'\r\n}\r\n\r\nconst maxLength = length => value => {\r\n    if (value.length > length) {\r\n              return  'Много символов'\r\n    } return undefined\r\n}\r\nexport const maxLength15 = maxLength(15)","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'e73e7e4e-cc87-4989-8a25-3b3153927263'}\r\n})\r\nexport const usersAPI = {\r\n    getUsers(pageNumber, PageSize) {\r\n        return instance.get(`users?page=${pageNumber}&count=${PageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\nexport const followUnfollow = {\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    }\r\n}\r\nexport const userAuth = {\r\n    authorization() {\r\n        return instance.get('auth/me')\r\n    },\r\n    logIn(email, password, rememberMe) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logOut() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\nexport const profile = {\r\n    profileUser(userID) {\r\n        return instance.get(`profile/` + userID)\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`/profile/status/` + userID)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status`, {status})\r\n    }\r\n }","import {profile} from \"../components/API/api\";\r\n\r\nconst ADD_POST = 'ADD_POST',\r\n    newProfile = 'NEW_PROFILE',\r\n    GET_STATUS = 'GET_STATUS',\r\n    DELETE_POST = 'DELETE_POST'\r\n\r\nexport let addPostActionCreator = (value) => ({\r\n    type: ADD_POST,\r\n    value\r\n})\r\n\r\nlet profileUpdate = (profile) => ({\r\n    type: newProfile,\r\n    profile\r\n})\r\nexport let gettingStatus = (status) => ({\r\n        type: GET_STATUS,\r\n        status\r\n})\r\nexport let deletePostActionCreator = (num) => ({\r\n        type: DELETE_POST,\r\n        num\r\n})\r\n\r\n\r\nlet initialState = {\r\n    PostData: [\r\n        {like: 20, message: 'Hi, how are you?', id: 1},\r\n        {like: 15486, message: 'It\\'s my first post', id: 2}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\n\r\nlet profileReduce = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                like: 0,\r\n                message: action.value.posText\r\n            }\r\n            return {\r\n                ...state,\r\n                PostData: [...state.PostData, newPost],\r\n            }\r\n        }\r\n        case newProfile:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case GET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n               PostData: state.PostData.filter(p => p.id !== action.num)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const getProfile = (userId) => {\r\n    return (dispatch) => {\r\n        profile.profileUser(userId)\r\n            .then(response => {\r\n                dispatch(profileUpdate(response.data))\r\n            })\r\n    }\r\n}\r\nexport const statusGet = (userId) => {\r\n    return (dispatch) => {\r\n        profile.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(gettingStatus(response.data))\r\n            })\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profile.updateStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                dispatch(gettingStatus(status))}\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default profileReduce","const ADD_TEXT = 'ADD_TEXT'\r\n\r\nexport let addText = (value) => ({\r\n    type: ADD_TEXT,\r\n    value\r\n})\r\n\r\nlet initialState = {\r\n    Data: [\r\n        {id: 1, name: 'Katya'},\r\n        {id: 2, name: 'Fedor'},\r\n        {id: 3, name: 'Alexey'}\r\n    ],\r\n    MesData: [\r\n        {message: 'what are you doing'},\r\n        {message: 'You suck'}\r\n    ],\r\n}\r\n\r\n\r\nlet messagePageReduce = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_TEXT:\r\n            return {\r\n                ...state,\r\n                MesData: [...state.MesData, {message: action.value.messageText}],\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default messagePageReduce","\r\nlet initialState = {\r\n        NavBestFriends: [\r\n            {name: 'Katya', img: 'https://www.meme-arsenal.com/memes/ae1d44253a861f53d95864dd37c55a78.jpg'},\r\n            {name: 'Stepa', img: 'https://i.pinimg.com/736x/4a/bc/c0/4abcc00427dbb86ee5da8270b52204f8.jpg'},\r\n            {name: 'Vitya', img: 'https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg'}\r\n        ],\r\n}\r\n\r\n\r\nlet bestFriendsReduce = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default bestFriendsReduce","import {followUnfollow, usersAPI as UsersAPI} from \"../components/API/api\";\r\n\r\nconst FOLLOW = 'FOLLOW',\r\n    UNFOLLOW = 'UNFOLLOW',\r\n    setUsers = 'SETUSERS',\r\n    ChangePage = 'CHANGEPAGE',\r\n    setTotalCount = 'SET_TOTAL_COUNT',\r\n    updatePage = 'UPDATEPAGE',\r\n    updatePageNumber = 'UPDATEPAGENUMBER',\r\n    setLoading = 'TOGGLE_LOADING',\r\n    loadUsers = 'LOAD_USERS',\r\n    toggleFollow = 'TOGGLE_FOLLOW_PROGRESS'\r\n\r\nexport let follow = (userID) => ({\r\n    type: FOLLOW,\r\n    userID: userID\r\n})\r\nexport let unFollow = (userID) => ({\r\n    type: UNFOLLOW,\r\n    userID: userID\r\n})\r\nexport let getSetUsers = (users) => ({\r\n    type: setUsers,\r\n    users: users\r\n})\r\nexport let updateChangePage = (num) => ({\r\n    type: ChangePage,\r\n    num: num\r\n})\r\nexport let setCountTotal = (totalCount) => ({\r\n    type: setTotalCount,\r\n    totalCount\r\n})\r\nexport let pageUpdate = (updateNumber) => ({\r\n    type: updatePage,\r\n    updateNumber: updateNumber,\r\n})\r\nexport let updateNumberPage = (newPage) => ({\r\n    type: updatePageNumber,\r\n    newPage\r\n})\r\nexport let toggleLoad = (val) => ({\r\n    type: setLoading,\r\n    val\r\n})\r\nexport let usersLoad = () => ({\r\n    type: loadUsers\r\n})\r\n\r\nexport let toggleFollowProgress = (stateFollow, userId) => ({\r\n    type: toggleFollow,\r\n    stateFollow,\r\n    userId\r\n})\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageNumber: 1,\r\n    PageSize: 5,\r\n    totalCount: 50,\r\n    loaded: true,\r\n    page: [1, 2, 3, 4],\r\n    isFollowedProgress: []\r\n}\r\n\r\n\r\nlet UsersReduce = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case setUsers:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case ChangePage:\r\n            return {\r\n                ...state,\r\n                pageNumber: action.num\r\n            }\r\n        case setTotalCount:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        case updatePage:\r\n            return {\r\n                ...state,\r\n                pageNumber: action.updateNumber\r\n            }\r\n        case updatePageNumber:\r\n            return {\r\n                ...state,\r\n                page: action.newPage === undefined ? state.page : action.newPage\r\n            }\r\n        case setLoading:\r\n            return {\r\n                ...state,\r\n                loaded: action.val\r\n            }\r\n        case loadUsers:\r\n            return {\r\n                ...state,\r\n                users: []\r\n            }\r\n        case toggleFollow:\r\n            return {\r\n                ...state,\r\n                isFollowedProgress: action.stateFollow\r\n                    ? [...state.isFollowedProgress, action.userId]\r\n                    : state.isFollowedProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getUser = (pageNumber, PageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(usersLoad())\r\n        dispatch(toggleLoad(true))\r\n        UsersAPI.getUsers(pageNumber, PageSize)\r\n            .then(data => {\r\n                dispatch(toggleLoad(false))\r\n                dispatch(getSetUsers(data.items))\r\n                dispatch(setCountTotal(data.totalCount))\r\n            })\r\n    }\r\n}\r\nexport const ChangePageUpdate = (u, newPage, PageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(usersLoad())\r\n        dispatch(toggleLoad(true))\r\n        dispatch(updateChangePage(u))\r\n        dispatch(updateNumberPage(newPage))\r\n        UsersAPI.getUsers(u, PageSize)\r\n            .then(data => {\r\n                dispatch(toggleLoad(false))\r\n                dispatch(getSetUsers(data.items))\r\n            })\r\n    }\r\n}\r\nexport const followUserAction = (uId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowProgress(true, uId))\r\n        followUnfollow.unfollow(uId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unFollow(uId))\r\n                    dispatch(toggleFollowProgress(false, uId))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowUserAction = (uId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowProgress(true, uId))\r\n        followUnfollow.follow(uId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(follow(uId))\r\n                    dispatch(toggleFollowProgress(false, uId))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default UsersReduce","import {userAuth} from \"../components/API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst logUser = 'SET_USER'\r\n\r\nexport let setUserState = (userId, login, email, isAuth) => ({\r\n    type: logUser,\r\n    userId,\r\n    login,\r\n    email,\r\n    isAuth\r\n})\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case logUser:\r\n            return {\r\n                ...state,\r\n                userId: action.userId,\r\n                login: action.login,\r\n                email: action.email,\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const getAuthMe = () => {\r\n    return (dispatch) => {\r\n        userAuth.authorization()\r\n            .then(response => {\r\n                if(response.data.resultCode === 0) {\r\n                    dispatch(setUserState(response.data.data.id, response.data.data.login, response.data.data.email, true))\r\n                }})\r\n    }\r\n}\r\nexport const getLogIn = (email, password, rememberMe = false) => {\r\n    return (dispatch) => {\r\n        userAuth.logIn(email, password, rememberMe)\r\n            .then(response => {\r\n                if(response.data.resultCode === 0) {\r\n                    dispatch(getAuthMe())\r\n                } else {\r\n                    let message = response.data.messages[0]\r\n                    dispatch(stopSubmit('Login', {_error: message}))\r\n                }\r\n            })\r\n    }\r\n}\r\nexport const getLogOut = () => {\r\n    return (dispatch) => {\r\n        userAuth.logOut()\r\n            .then(response => {\r\n                if(response.data.resultCode === 0) {\r\n                    dispatch(setUserState( null, null, null, false))\r\n                }})\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReduce from \"./profile-reducer\";\r\nimport messagePageReduce from \"./Dialogs-reducer\";\r\nimport bestFriendsReduce from \"./BestFriends-reducer\";\r\nimport UsersReduce from \"./users-reducer\";\r\nimport authReducer from \"./Auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reduceComb = combineReducers({\r\n    profilePage: profileReduce,\r\n    messagePage: messagePageReduce,\r\n    BestFriends: bestFriendsReduce,\r\n    UsersPage: UsersReduce,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n\r\nlet store = createStore(reduceComb, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store","import React from 'react';\r\nimport best from './BestFriends.module.css';\r\n\r\nconst BestFriends = (props) => {\r\n    let Friends =\r\n        props.FriendsWay.map(state =>\r\n            <div>\r\n                <img className={best.img} src={state.img}/>\r\n                <div>{state.name}</div>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <div className={best.best}>\r\n            <div className={best.decor}>Best Friends</div>\r\n            <div className={best.frpos}>\r\n                {Friends}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BestFriends;","import React from 'react';\r\nimport bestFriendsReduce from \"../../redux/BestFriends-reducer\";\r\nimport BestFriends from \"./BestFriends\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        FriendsWay: state.BestFriends.NavBestFriends\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeFriends: (Friends) => {\r\n            dispatch(bestFriendsReduce(Friends))\r\n        }\r\n    }\r\n}\r\n\r\nconst BestFriendsContainer = connect(mapStateToProps, mapDispatchToProps) (BestFriends);\r\nexport default BestFriendsContainer;","import React from 'react';\r\nimport nav from './nav-bar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport BestFriendsContainer from \"../BestFriends/BestFriendsContainer\";\r\n\r\nconst Nav = (props) => {\r\n    return (<nav className={nav.nav}>\r\n        <NavLink to='/profile' className={nav.item} activeClassName={nav.active}>Profile</NavLink>\r\n        <NavLink to='/dialogs' className={nav.item} activeClassName={nav.active}>Messages</NavLink>\r\n        <NavLink to='/users' className={nav.item} activeClassName={nav.active}>Users</NavLink>\r\n        <NavLink to='/news' className={nav.item} activeClassName={nav.active}>News</NavLink>\r\n        <NavLink to='/music' className={nav.item} activeClassName={nav.active}>Music</NavLink>\r\n        <NavLink to='settings' className={`${nav.item} ${nav.important}`}\r\n                 activeClassName={nav.active}>Settings</NavLink>\r\n        <div className={`${nav.best} ${nav.item}`}><BestFriendsContainer/></div>\r\n    </nav>);\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport dialogs from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n    <div>\r\n    <p>News</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport dialogs from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n    <div>\r\n    <p>Music</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport dialogs from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n    <div>\r\n    <p>Settings</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport dialogs from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    return (\r\n        <div className={`${dialogs.dialog} ${dialogs.active}`}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport dialogs from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={dialogs.message}>\r\n                {props.message}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react'\r\n\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {meta.touched && ((meta.error && <span>{meta.error}</span>) || (meta.warning &&\r\n                <span>{meta.warning}</span>))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <div>\r\n            <FormControl{...props}><textarea {...input} {...restProps} /></FormControl>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport dialogs from './Dialogs.module.css';\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/textarea\";\r\nimport {required} from \"../utils/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let submit = (value) => {\r\n        props.addText(value)\r\n    }\r\n\r\n    let newData =\r\n        props.Data.map(dialog =>\r\n            (<DialogsItem name={dialog.name} id={dialog.id}/>)\r\n        );\r\n\r\n    let newMessage =\r\n        props.newMessageWay.map(messages =>\r\n            (<Message message={messages.message} id={messages.id}/>)\r\n        );\r\n\r\n    return (\r\n        <div className={dialogs.message}>\r\n            <div className={dialogs.dialogs}>\r\n                {newData}\r\n            </div>\r\n            <div className={dialogs.chats}>\r\n                {newMessage}\r\n                <DialogsReduxForm onSubmit={submit} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst SendMessage = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} type='textarea' name='messageText' className={dialogs.send} validate={[required]} />\r\n            <button className={dialogs.btn}>send</button>   \r\n        </form>\r\n    )\r\n}\r\n\r\nlet DialogsReduxForm = reduxForm({\r\n    form: 'messages'\r\n})(SendMessage)\r\n\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withRedirectLogin = (Component) => {\r\n\r\n    class redeirectLogin extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) {\r\n                return <Redirect to='/login'/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    return connect(mapStateToProps)(redeirectLogin)\r\n}","import React from 'react';\r\nimport {addText} from \"../../redux/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRedirectLogin} from \"../HOC-isAuth/hocRedirectLogin\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageWay: state.messagePage.MesData,\r\n        Data: state.messagePage.Data\r\n    }\r\n}\r\n\r\n export default compose(connect(mapStateToProps, {addText}),\r\n    withRedirectLogin\r\n)(Dialogs)\r\n","import React from 'react';\r\nimport style from './users.module.css';\r\nimport userPhoto from '../img/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {followUnfollow} from \"../API/api\";\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    let totalPage = Math.ceil(props.totalCount / props.PageSize)\r\n\r\n    let nextPage = () => {\r\n        let number = props.pageNumber + 1\r\n        let newPage = props.page.map((u) => u + 1)\r\n        props.updatePage(number, newPage)\r\n    }\r\n\r\n\r\n    let prevPage = () => {\r\n        let number = props.pageNumber - 1\r\n        let newPage = props.page.map((u) => u - 1)\r\n        props.updatePage(number, newPage)\r\n    }\r\n\r\n    props.page.splice(3, 1, totalPage)\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            <span onClick={() => prevPage()}>Next</span>\r\n            <span>\r\n                {props.page.map((u) => {\r\n                        return (<span className={`${u === props.pageNumber && style.numberActive} ${style.number}`}\r\n                                      onClick={() => {\r\n                                          props.updatePage(u)\r\n                                      }}>{u}</span>)\r\n                    }\r\n                )}\r\n            </span>\r\n            <span onClick={() => nextPage()}>Next</span>\r\n        </div>\r\n        {\r\n            props.userState.map(u =>\r\n                <div className={style.uBlock} key={u.id}>\r\n                    <NavLink to={`profile/${u.id}`}>\r\n                        <img src={u.photos.small == null\r\n                            ? userPhoto : u.photos.small}\r\n                             className={style.avatar}/>\r\n                    </NavLink>\r\n                    <div className={style.blockName}>\r\n                        <h5>{u.name}</h5>\r\n                        <p>{u.status}</p>\r\n                    </div>\r\n                    {u.followed\r\n                        ? <button disabled={props.followProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.followUserAction(u.id)\r\n                        }}\r\n                                  className={style.btn}>Unfollow</button>\r\n                        : <button disabled={props.followProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.unFollowUserAction(u.id)\r\n                        }}\r\n                                  className={style.btn}>Follow</button>\r\n                    }\r\n                </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react'\r\nimport loadImg from '../../img/audio.svg'\r\n\r\nconst Loader = (props) => {\r\n    return <>\r\n        <img src={loadImg} />\r\n    </>\r\n}\r\n\r\nexport default Loader","export const getUsersState = (state) => {\r\n    return state.UsersPage.users\r\n}\r\nexport const getPageNumber = (state) => {\r\n    return state.UsersPage.pageNumber\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.PageSize\r\n}\r\nexport const getTotalCount = (state) => {\r\n    return state.UsersPage.totalCount\r\n}\r\nexport const getPage = (state) => {\r\n    return state.UsersPage.page\r\n}\r\nexport const getLoaded = (state) => {\r\n    return state.UsersPage.loaded\r\n}\r\nexport const getFollowProgress = (state) => {\r\n    return state.UsersPage.isFollowedProgress\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUser, ChangePageUpdate,\r\n    followUserAction, unFollowUserAction\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Loader from \"../common/loader/loader\";\r\nimport {\r\n    getFollowProgress,\r\n    getLoaded,\r\n    getPage,\r\n    getPageNumber,\r\n    getPageSize,\r\n    getTotalCount,\r\n    getUsersState\r\n} from \"../../redux/reselect\";\r\n\r\nclass UsersContainerAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUser(this.props.pageNumber, this.props.PageSize)\r\n    }\r\n\r\n    updatePage = (u, newPage) => {\r\n        this.props.ChangePageUpdate(u, newPage, this.props.PageSize)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>\r\n            {this.props.loaded === true ? <Loader/> : null}\r\n            <Users page={this.props.page}\r\n                   pageNumber={this.props.pageNumber}\r\n                   userState={this.props.userState}\r\n                   totalCount={this.props.totalCount}\r\n                   PageSize={this.props.PageSize}\r\n                   updatePage={this.updatePage}\r\n                   UpdateNumber={this.props.UpdateNumber}\r\n                   followProgress={this.props.followProgress}\r\n                   followUserAction={this.props.followUserAction}\r\n                   unFollowUserAction={this.props.unFollowUserAction}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userState: getUsersState(state),\r\n    pageNumber: getPageNumber(state),\r\n    PageSize: getPageSize(state),\r\n    totalCount: getTotalCount(state),\r\n    page: getPage(state),\r\n    loaded: getLoaded(state),\r\n    followProgress: getFollowProgress(state)\r\n})\r\n\r\nlet UsersContainer = connect(mapStateToProps, {\r\n    getUser,\r\n    ChangePageUpdate,\r\n    followUserAction,\r\n    unFollowUserAction\r\n})(UsersContainerAPI);\r\n\r\n\r\nexport default UsersContainer","import React from 'react';\r\nimport style from '../userinfo.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    unActiveEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onChangeStatus = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<>\r\n            {this.state.editMode === false ?\r\n                <div onDoubleClick={this.activeEditMode} className={style.status}>\r\n                    {this.state.status || '--------'}\r\n                </div>\r\n                : <input onChange={this.onChangeStatus} autoFocus={true} onBlur={this.unActiveEditMode}\r\n                         value={this.state.status}/>\r\n            }\r\n        </>)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport profile from './userinfo.module.css';\r\nimport Loader from \"../../common/loader/loader\";\r\nimport ProfileStatus from \"./pofileStatus/profileStatus\";\r\n\r\n\r\nconst UserInfo = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Loader/>\r\n    }\r\n    return <>\r\n        <div className={profile.avatar}>\r\n            <img src={props.userProfile.photos.small} height='100px' width='100px'/>\r\n            <div>\r\n                <div>{props.userProfile.fullName}</div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default UserInfo;","import React from 'react';\r\nimport p from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return  <div className={p.block}>\r\n        <div className={p.item}>{props.message}</div>\r\n        <span className={p.likely}>\r\n            <img src=\"https://1.bp.blogspot.com/-d3LozscUMBY/Vtz13aLffMI/AAAAAAAALp0/Y9pFym980s0/s1600/love.png\" className={p.img}/>\r\n                {props.like}</span>\r\n        </div>\r\n\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport my from './myPosts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLength15} from \"../../utils/validators\";\r\nimport {Textarea} from \"../../common/textarea\";\r\n\r\nconst MyPosts = (props) => {\r\n    let newPostDate =\r\n        props.newPostWay.map(PostData =>\r\n            (<Post message={PostData.message} like={PostData.like}/>)\r\n        )\r\n    let submit = (value) => {\r\n        props.addPostActionCreator(value)\r\n    }\r\n\r\n    return <div>\r\n        <div className={my.myp}>\r\n            <div>New posts</div>\r\n            <PostReduxForm onSubmit={submit}/>\r\n        </div>\r\n        <div className={my.post}>My post</div>\r\n        {newPostDate}\r\n    </div>\r\n}\r\n\r\nconst myPostSendMessage = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} type='textarea' name='posText' className={my.textarea} validate={[required, maxLength15]}/>\r\n            <div>\r\n                <button className={my.btn}>send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet PostReduxForm = reduxForm({\r\n    form: 'Post'\r\n})(myPostSendMessage)\r\n\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./myPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostWay: state.profilePage.PostData,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPostActionCreator}) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport UserInfo from \"./UserInfo/userinfo\";\r\nimport MyPostsContainer from \"./Myposts/myPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n            <UserInfo userProfile={props.userProfile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer\r\n                store={props.store}\r\n            />\r\n        </div>\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, statusGet, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withRedirectLogin} from \"../HOC-isAuth/hocRedirectLogin\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass  ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n       let userID = this.props.match.params.userId\r\n        if (!userID) {\r\n            userID = this.props.authorizedUserId\r\n        }\r\n        this.props.getProfile(userID)\r\n        this.props.statusGet(userID)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport  default compose(connect (mapStateToProps, {getProfile, statusGet, updateStatus}),\r\n    withRouter,\r\n    withRedirectLogin)\r\n(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport header from './header.module.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    const LogOut = () => {\r\n        props.getLogOut()\r\n    }\r\n\r\n    return (<>\r\n        <header className={header.header}>\r\n            <div>\r\n                {props.login\r\n                    ?<div>\r\n                        {props.login}\r\n                        <button onClick={LogOut}>Log out</button>\r\n                    </div>\r\n                    : \"You not authorized\"\r\n                }\r\n            </div>\r\n        </header>\r\n\r\n    </>)\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthMe, getLogOut} from \"../../redux/Auth-reducer\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getAuthMe()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} login={this.props.login} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        login: state.auth.login,\r\n})\r\n\r\nexport default connect (mapStateToProps, {getAuthMe, getLogOut}) (HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {getLogIn} from \"../../redux/Auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Login' component='input' type='textarea' name='login'/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder='Password' component='input' type='textarea' name='password'/>\r\n            </div>\r\n            <div>\r\n                <Field component='input' type='checkbox' name='rememberMe'/>\r\n                Remember me\r\n            </div>\r\n            <div>\r\n                {props.error}\r\n            </div>\r\n            <div>\r\n                <button>Log In</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nlet LoginReduxForm = reduxForm({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n     let submit = (value) => {\r\n         props.getLogIn(value.login, value.password, value.rememberMe)\r\n    }\r\n    if (props.isAuth === true){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={submit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect (mapStateToProps, {getLogIn})(Login)","import React from 'react';\r\nimport './App.css';\r\nimport Nav from \"./components/Navbar/nav-bar\";\r\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/profileContainer\";\r\nimport HeaderContainer from \"./components/Header/headerContainer\";\r\nimport Login from \"./components/Login/login\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path='/dialogs' render={() =>\r\n                        <DialogsContainer/>\r\n                    }/>\r\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path='/news' render={() => <News/>}/>\r\n                    <Route path='/music' render={() => <Music/>}/>\r\n                    <Route path='/settings' render={() => <Settings/>}/>\r\n                    <Route path='/login' render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport store from './redux/redux-store';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n</BrowserRouter>, document.getElementById('root'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uBlock\":\"users_uBlock__32N58\",\"avatar\":\"users_avatar__3c1ry\",\"blockName\":\"users_blockName__85_SX\",\"btn\":\"users_btn__28Nfk\",\"number\":\"users_number__151KN\",\"numberActive\":\"users_numberActive__nPGYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"best\":\"BestFriends_best__1S-FN\",\"decor\":\"BestFriends_decor__1DJmK\",\"frpos\":\"BestFriends_frpos__3xBWG\",\"img\":\"BestFriends_img__1nllb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2OxKC\",\"block\":\"Post_block__aBsxY\",\"likely\":\"Post_likely__2z6NV\",\"img\":\"Post_img__2Uoru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myp\":\"myPosts_myp__3efv-\",\"textarea\":\"myPosts_textarea__227XI\",\"btn\":\"myPosts_btn__3Kk4N\",\"post\":\"myPosts_post__14ouh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"userinfo_avatar__2WOm7\",\"status\":\"userinfo_status__2m7Jr\"};"],"sourceRoot":""}